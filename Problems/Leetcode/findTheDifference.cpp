/* * * * * * * * * * * * * * * * * *
Problem: LC 389. Find The Difference

--Problem statement:
You are given two strings 's' and 't'. String 't' is generated by random shuffling string
's' and then add one more letter at a random position. Return the letter that was added to 't'.

  > Example 1:
      Input: s = "abcd", t = "abcde"
      Output: "e"
      Explanation: 'e' is the letter that was added.

  > Example 2:
      Input: s = "", t = "y"
      Output: "y"

--Constraints:
    :: 0 <= s.length <= 1000
    :: t.length == s.length + 1
    :: 's' and 't' consist of lowercase English letters.

--Inputs:
  - strings 's' and 't'.

--Outputs:
  - char: letter added to the string 't'.

--Reasoning: If we sum all the ASCII codes for the characters in each one of the strings and subtract
them from each other, the difference will be the ASCII code for the missing character.

--Time complexity:
    :: O(n), where n is the length of the largest string.

--Space complexity:
    :: O(1), since no additional input-dependent space is allocated.

* * * * * * * * * * * * * * * * * */

#include <iostream>
#include <string>

class Solution {
public:
  static char findTheDifference(std::string s, std::string t) {
    for (int i{0}; i < s.size(); i++)
      t.at(i + 1) += t.at(i) - s.at(i);

    return t.at(t.size() - 1);
  }
};

int main() {
  std::string s{""}, t{""};

  s = "abcd";
  t = "abcde";

  std::cout << "The difference between the string \"" << s << "\" and the string \"" << t << "\" is: \"" << Solution::findTheDifference(s, t) << "\"\n";
}
